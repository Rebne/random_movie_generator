package home

import (
	"github.com/Rebne/movie_generator/helpers"
	"github.com/Rebne/movie_generator/models"
	"strings"
)

templ App(title string) {
	@Layout(title) {
		@NavBar()
		<div class="flex-1 flex items-center justify-center">
			<div id="container">
				@MovieCardSkeleton()
			</div>
		</div>
		@AboutDrawer()
	}
}

templ NavBar() {
	<div class="navbar bg-base-100">
		<div class="flex-1"></div>
		<div class="flex-none">
			<label for="my-drawer-4" class="btn btn-square btn-ghost">
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					class="inline-block h-6 w-6 stroke-current"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"
					></path>
				</svg>
			</label>
		</div>
	</div>
}

templ MovieCard(data models.MovieData) {
	<div class="card bg-base-100 w-96 shadow-xl">
		<figure>
			<img
				src={ data.Poster }
				alt={ data.Title }
				class="w-[300px] h-[444px] object-cover"
			/>
		</figure>
		<div class="card-body">
			<h2 class="card-title">
				{ data.Title } ({ data.Year })
				<div class="badge badge-secondary">{ helpers.FormatRuntimeString(data.Runtime) }</div>
			</h2>
			<p>{ data.Plot }</p>
			<div class="flex flex-wrap justify-end">
				for _, g := range strings.Split(data.Genre, ", ") {
					<div class="badge badge-secondary mr-1 mb-1">{ g }</div>
				}
			</div>
		</div>
	</div>
}

templ AboutDrawer() {
	<div class="drawer drawer-end">
		<input id="my-drawer-4" type="checkbox" class="drawer-toggle"/>
		<div class="drawer-content"></div>
		<div class="drawer-side">
			<label for="my-drawer-4" class="drawer-overlay"></label>
			<div class="menu p-4 w-80 h-full bg-base-200 text-base-content">
				<div class="flex justify-end">
					<label for="my-drawer-4" class="btn btn-square btn-ghost absolute top-2 right-2">
						<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
						</svg>
					</label>
				</div>
				<div class="overflow-y-auto flex-grow">
					<h2 class="text-xl font-bold mb-4">ElsaRene Random Movie Generator</h2>
					<h3 class="text-lg font-semibold mb-2">About us</h3>
					<p class="text-sm mb-4">
						Hi! We're Elsa and Rene, a couple from Estonia who are totally into movies. 
						We put together this website to showcase films that both of us really love. 
						Our aim? To share only those flicks that have won over both our hearts, giving you 
						a handpicked selection of awesome movies we both adore. We're hoping our picks will 
						get you as excited and entertained as they did us. Enjoy!
					</p>
					<h3 class="text-lg font-semibold mb-2">How it works</h3>
					<p class="text-sm mb-4">
						Load the page or hit refresh and a random movie will be generated for you.
						Movie recommendations are not duplicated. Only when you have exhausted the list, the data is reset.
					</p>
					<h3 class="text-lg font-semibold mb-2">Tech stack</h3>
					<p class="text-sm mb-4">
						Golang
						<br/>
						Templ
						<br/>
						Tailwindcss
						<br/>
						HTMX
						<br/>
						JavaScript
						<br/>
						DaisyUI
						<br/>
						OMDb API
					</p>
					<div class="mt-auto">
						<p class="text-lg font-semibold">
							<a href="https://github.com/Rebne/movie_generator" target="_blank">Github repo</a>
						</p>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ MovieCardSkeleton() {
	<div class="card bg-base-100 w-96 shadow-xl">
		<figure>
			<div class="w-[300px] h-[444px] skeleton"></div>
		</figure>
		<div class="card-body">
			<div class="flex justify-between">
				<div class="card-title w-[70%] h-10 skeleton"></div>
				<div class="card-title w-[20%] h-6 skeleton"></div>
			</div>
			<div class="w-full h-20 skeleton"></div>
			<div class="flex flex-wrap justify-end">
				<div class="skeleton h-6 w-[40%] mr-1 mb-1"></div>
			</div>
		</div>
	</div>
}

templ Layout(title string) {
	<!DOCTYPE html>
	<html lang="en" data-theme="bumblebee">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<link href="/public/css/styles.css" rel="stylesheet"/>
			<script src="https://unpkg.com/htmx.org@2.0.2/dist/htmx.js" integrity="sha384-yZq+5izaUBKcRgFbxgkRYwpHhHHCpp5nseXp0MEQ1A4MTWVMnqkmcuFez8x5qfxr" crossorigin="anonymous"></script>
			<script src="/public/js/app.js"></script>
			<style>
                * {
                    font-family: 'Arial', sans-serif;
                }
                .loading-skeleton {
                    background: linear-gradient(110deg, #ececec 8%, #f5f5f5 18%, #ececec 33%);
                    background-size: 200% 100%;
                    animation: loading_shine 0.7s linear infinite;
                    width: 100%;
                    border-radius: 5px;
                }
                @keyframes loading_shine {
                    to {
                        background-position-x: -200%;
                    }
                }
            </style>
			<title>{ title }</title>
		</head>
		<body>
			{ children... }
		</body>
	</html>
}
